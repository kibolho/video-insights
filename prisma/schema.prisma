// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("POSTGRES_PRISMA_URL")
  directUrl    = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Video {
  id            String   @id @default(uuid())
  name          String
  path          String
  transcription String?
  createdBy     User     @relation(fields: [createdUserId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdUserId String
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @updatedAt @map(name: "updated_at")

  @@index([createdUserId])
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  stripeCustomerId String?   @unique
  isActive         Boolean   @default(false)
  accounts         Account[]
  sessions         Session[]
  videos           Video[]
  createdAt        DateTime  @default(now()) @map(name: "created_at")
  updatedAt        DateTime  @updatedAt @map(name: "updated_at")
}

model Prompt {
  id       String @id @default(uuid())
  title    String
  template String
}
